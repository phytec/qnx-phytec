%C - ESAI Sound driver for Freescale i.MX SOC family

This is a DLL of the io-audio system.

command:

   io-audio [-d mxesai-[variant] [driver_options]] [-o opt[, opt[, opt]]] [v[v]...]]

driver_options:

esaibase      = #            base address of esai controller (optional)
tevt          = #            esai TX DMA event number
tchn          = #            esai TX DMA channel type
revt          = #            esai RX DMA event number
rchn          = #            esai RX DMA channel type
rate          = min[:max]    esai audio sample rate
main_clk_src  = #            master clock source
                                (0 = XTAL (from SOC), 1 = FSYS (from SOC) 2 = External Oscillator)
main_clk_freq = #            frequency of clock source feeding ESAI module
async_clks                   TX and RX clks are asynchronous
tx_voices     = #[:#...]     number of playback voices
rx_voices     = #[:#...]     number of capture voices
                                if a ':' separated list of voices is provided, the hardware stream
                                will split into multiple pseudo devices
i2c_bus       = #            I2C device number for codec control
i2c_addr      = #            codec I2C slave address
mixer         = [info:[mixer option1]:[mixer options2][:[other options]]]
                                mixer=info to display the details of mixer options
sdo_pin_map   = #[:#..]      lists the output pin numbers
sdi_pin_map   = #[:#..]      lists the input pin numbers
tx_chmap      = str[:str...] TX PCM channel map
rx_chmap      = str[:str...] RX PCM channel map
clk_mode      = [master|slave] Clock master or slave.
nslots        = #            Number of slots in the TDM frame.
debug                        PCM logging to /dev/shmem.
tx_frag_size  = #            DMA fragment/block size. Only used if pseudo devices enabled
rx_frag_size  = #            DMA fragment/block size. Only used if pseudo devices enabled
protocol      = [i2s|pcm]    Format of audio frame.
                                i2s = Active low FS, Transmit on falling edge,
                                      Receive on rising edge, 1-bit data delay.
                                pcm = Active high FS, Transmit on rising edge,
                                      Receive on rising edge, 0-bit data delay.
bit_delay     = [0|1]        Data bit delay.
xclk_pol      = [0|1]        Transmit bit clock polarity.
rclk_pol      = [0|1]        Receive bit clock polarity.
fsync_pol     = [0|1]        Frame sync polarity.
sample_size   = [16|32]      Sample size
slot_size     = [16|32]      TDM slot size.
fs_active_width = [bit|word] Configure the Frame sync pulse width.

Note: The protocol option can be used in place of the bit_delay, xclk_pol, rclk_pol and fsync_pol options.

Note: When using multiple data pins and pseudo interfaces, the number of pins must match the number of pseudo interfaces
      (one pseudo interface per data pin) and the number of voices on each pseudo interface must be the same.

example (2 input pins with two stereo pseudo capture interface and 3 output pins with 3 stereo pseudo playback interfaces):
io-audio -d mxesai-mx8 rx_voices=2:2,tx_voices=2:2:2,sdo_pin_map=0:1:2,sdi_pin_map=0:1

example:
io-audio -d mxesai-mx53sabre-ai esaibase=0x50018000,tevt=41,tchn=3,revt=40,rchn=4,rate=48000,i2c_bus=1,i2c_addr=0x48

Note: for 64-bit systems, use the pool_name and pool_size global options to ensure that DMA buffer allocation
uses memory below 4 GB address space.

Example:
io-audio -m pool_name=below4G,pool_size=<desired_pool_size_in_KB>  -d driver

